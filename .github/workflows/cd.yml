name: 🚢 CD

on:
  push:
    branches: [main, develop]
  release:
    types: [published]

env:
  NODE_VERSION: "20"
  CI: true

jobs:
  # ================================================================
  # 🏗️ BUILD FOR PRODUCTION
  # ================================================================
  build:
    name: 🏗️ Production Build
    runs-on: ubuntu-latest

    steps:
      - name: 📂 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build for production
        run: npm run build:production
        env:
          NEXT_PUBLIC_SHOPIFY_STOREFRONT_ACCESS_TOKEN: ${{ secrets.NEXT_PUBLIC_SHOPIFY_STOREFRONT_ACCESS_TOKEN }}
          SHOPIFY_STOREFRONT_URL: ${{ secrets.SHOPIFY_STOREFRONT_URL }}

      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: |
            apps/caviste-app/.next
            packages/*/dist
          retention-days: 30

  # ================================================================
  # 🚀 DEPLOY TO VERCEL
  # ================================================================
  deploy:
    name: 🚀 Deploy to Vercel
    runs-on: ubuntu-latest
    needs: build
    environment: production

    steps:
      - name: 📂 Checkout
        uses: actions/checkout@v4

      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: production-build

      - name: 🚀 Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: "--prod --yes"
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          scope: ${{ secrets.VERCEL_ORG_ID }}

  # ================================================================
  # 📦 PUBLISH PACKAGES
  # ================================================================
  publish:
    name: 📦 Publish Packages
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'

    steps:
      - name: 📂 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build packages
        run: npm run packages:build

      - name: 📦 Publish to NPM
        run: npm run release
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # ================================================================
  # 🔔 NOTIFICATIONS
  # ================================================================
  notify:
    name: 🔔 Notify Deployment
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always() && github.ref == 'refs/heads/main'

    steps:
      - name: 🎉 Success notification
        if: needs.deploy.result == 'success'
        run: |
          echo "🎉 Deployment successful!"
          # Add Slack/Discord webhook here if needed

      - name: ❌ Failure notification
        if: needs.deploy.result == 'failure'
        run: |
          echo "❌ Deployment failed!"
          # Add Slack/Discord webhook here if needed
